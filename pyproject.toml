[build-system]
requires = [
  "setuptools >= 65",
  "setuptools_scm[toml] >= 6.2",
  "wheel >= 0.29.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "epyscan"
dynamic = ["version"]
readme = "README.md"
license = { file = "LICENCE.md" }
authors = [
  { name = "Peter Hill", email = "peter.hill@york.ac.uk" },
  { name = "Joel Adams", email = "joel.adams@york.ac.uk" },
]
requires-python = ">=3.9"
dependencies = ["epydeck >= 1.0.0", "numpy >= 1.24", "scipy >= 1.10"]
description = "Create campaigns of EPOCH plasma PIC code runs over a given parameter space using various sampling methods."

[project.optional-dependencies]
docs = [
  "sphinx >= 5.3",
  "sphinx_autodoc_typehints >= 1.19",
  "sphinx-book-theme >= 0.4.0rc1",
  "sphinx-argparse-cli >= 1.10.0",
  "sphinx-inline-tabs",
]
tests = ["pytest >= 3.3.0"]
lint = ["ruff"]

[tool.setuptools_scm]
write_to = "src/epyscan/_version.py"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN", # flake8-import-conventions
  "G",   # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy specific rules
  "PD",  # pandas-vet
]
ignore = [
  "PLR2004", # magic-comparison
  "B9",      # flake8-bugbear opinionated warnings
]

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = true }]
